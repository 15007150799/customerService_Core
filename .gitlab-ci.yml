before_script:
  - echo " CI is running... "
  - docker_image_version=latest
  - local_ip=$(ifconfig  | grep -E 'inet.[0-9]' | grep -v '.0.1' | awk '{ print $2}')

# ******************************************************************************************************
# ************************************** 测试环境配置 ****************************************************
# ******************************************************************************************************

deploy-test-kefu:
  stage: deploy
  tags:
  - build
  only:
  - develop
  environment:
    name: testing
  script:
  - name="kefu-online"
  - server_port=20700
  - docker run -i --rm -v /opt/gopath/src:/go/src -v $(pwd):/go/src/git.jsjit.cn/customerService/customerService_Core -w /go/src/git.jsjit.cn/customerService/customerService_Core golang:1.10.3 sh -c "CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app ."
  - if [ $(docker images maven.jsjit.cn:9911/kefu/$name -q | wc -l) -eq 1 ] ; then docker rmi $(docker images maven.jsjit.cn:9911/kefu/$name -q) ; fi
  - docker build --rm -t maven.jsjit.cn:9911/kefu/$name:$docker_image_version . && docker push maven.jsjit.cn:9911/kefu/$name:$docker_image_version
  - if [ $(docker service ls -q -f "name=$name" | wc -l) -eq 1 ] ; then docker service update --image $(docker inspect --type image --format '{{index .RepoDigests 0}}' maven.jsjit.cn:9911/kefu/$name:$docker_image_version) $name ; else docker service create --replicas=1 --publish $server_port:5000 --name $name --with-registry-auth maven.jsjit.cn:9911/kefu/$name:$docker_image_version ; fi
